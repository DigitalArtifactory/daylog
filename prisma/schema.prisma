// daylog uses Prisma to manage its database schema.
// We use PostgreSQL as the default database provider, but you can change it to MSSQLServer or MySQL if you prefer.
// If you want to use a different database provider, you might need to change this schema a bit,
// and you can also use the Prisma Migrate tool to generate the migration files for you.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  password     String
  secret       String?
  mfa          Boolean   @default(false)
  name         String?
  role         String    @default("user") // or admin (Don't Use enum in order to be sqlite compatible).
  terms        String    @default("pending")
  boards       Board[]
  sessions     Session[]
  sortNotesBy  String?   @default("created_desc") // created_desc, created_asc, title_asc, title_desc
  sortBoardsBy String?   @default("created_desc")
}

model Session {
  id        String   @id
  userId    Int
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Board {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  imageUrl    String?
  favorite    Boolean  @default(false)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  notes       Note[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  imageUrl  String?
  favorite  Boolean  @default(false)
  boards    Board?   @relation(fields: [boardsId], references: [id], onDelete: Cascade)
  boardsId  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Setting {
  key   String  @id
  value String?
}
